spring.application.name=business-service

#
# Server settings
#server.port=18081
server.servlet.context-path=/

#
# Nacos Settings
nacos.config.server-addr=${monet.nacos.config.server.addr}
nacos.config.namespace=${monet.nacos.config.namespace}

#
# Mybatis Settings
mybatis.mapper-locations=classpath*:mappers/*.xml
# 指定 Mybatis 的实体目录
mybatis.type-aliases-package=com.fakebilly.monet.business.infrastructure.entity
mybatis.config-location=classpath:mybatis-config.xml

#
# PageHelper Settings
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=false
pagehelper.params=count=countSql
pagehelper.page-size-zero=true

#
# Server Settings
# 应用服务 WEB 访问端口
server.port=18081
# 下面是配置 undertow 作为服务器的参数
# 设置IO线程数, 它主要执行非阻塞的任务, 它们会负责多个连接, 默认设置每个 CPU 核心一个线程
server.undertow.threads.io=4
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow 会从这个线程池中取得线程, 它的值设置取决于系统的负载
server.undertow.threads.worker=20
# 以下的配置会影响 buffer, 这些 buffer 会用于服务器连接的 IO 操作, 有点类似 netty 的池化内存管理
# 每块 buffer 的空间大小, 越小的空间被利用越充分
server.undertow.buffer-size=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true

#
# Log Settings
logging.config=classpath:logback-spring.xml
#logging.config=classpath:log4j2.xml

#
# DataSource Settings
spring.datasource.initialization-mode:always
# jdbc 基本配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/monet?characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
# 连接池配置
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 连接等待超时时间
spring.datasource.druid.max-wait=30000
# 配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=select 'x'
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开 PSCache, 并且指定每个连接上 PSCache 的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=20
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的 filters, 去掉后监控界面 sql 无法统计, 'wall' 用于防火墙
spring.datasource.druid.filters=stat,wall
# 通过 connectProperties 属性来打开 mergeSql 功能; 慢 SQL 记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# Spring 监控 AOP 切入点，如 x.y.z.service.*, 配置多个英文逗号分隔
spring.datasource.druid.aop-patterns=com.fakebilly.monet.business.*.service.*

#
# Dubbo Settings
# dubbo 协议
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
dubbo.application.name=business-service
# dubbo 服务扫描基准包
dubbo.scan.base-packages=com.fakebilly.monet.business
dubbo.provider.timeout=60000
dubbo.provider.version=1.0.0
dubbo.consumer.check=false
dubbo.consumer.version=1.0.0
dubbo.protocol.payload=52428800
# dubbo 协议端口 -1 表示自增端口, 从 20880 开始
dubbo.protocol.port=28080
# dubbo 消费端订阅服务端的应用名, 多个服务提供者用逗号分隔
# 这里订阅"自己", 会被忽略掉, 请根据实际情况添加
dubbo.cloud.subscribed-services=business-service
# dubbo 元数据配置, 减少注册中心的数据存储量, 减少网络数据传输量, 提升IO速度
dubbo.metadata-report.address=zookeeper://127.0.0.1:2181
# 定时刷新关闭
dubbo.metadata-report.cycle-report=false
dubbo.metadata-report.retry-times=30
#dubbo.metadata-report.group=dubbo-dev
#dubbo.registry说明文档：http://dubbo.apache.org/zh-cn/docs/user/references/xml/dubbo-registry.html
dubbo.registry.address=127.0.0.1:2181
dubbo.registry.protocol=zookeeper
#dubbo.registry.file=/data/opt/cache/business-service.cache
# 注册到注册中心的 URL 是否采用精简模式的
dubbo.registry.simplified=true
dubbo.provider.filter=-validation,customerValidationFilter,monitorServiceFilter

#
# Redis Settings
redis.nacos.config.server-addr=http://127.0.0.1:8848
redis.nacos.config.namespace=4edf5456-t6h2-352v-dfre-5ga31rt431e4
redis.nacos.redisson.dataId=redis
redis.nacos.redisson.group=MONET-COMMON

#
# Elasticsearch Settings
es.nacos.config.server-addr=http://127.0.0.1:8848
es.nacos.config.namespace=4edf5456-t6h2-352v-dfre-5ga31rt431e4
es.nacos.es.dataId=es
es.nacos.es.group=MONET-COMMON

#
# RocketMQ Settings
rocketmq.nacos.config.server-addr=http://127.0.0.1:8848
rocketmq.nacos.config.namespace=4edf5456-t6h2-352v-dfre-5ga31rt431e4
rocketmq.nacos.rocketmq.dataId=mq
rocketmq.nacos.rocketmq.group=MONET-COMMON

interceptor.pathPatterns=/**
interceptor.excludePathPatterns=
interceptor.restPathPatterns=/**
interceptor.restExcludePathPatterns=/user/getUser